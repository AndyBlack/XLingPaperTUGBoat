% This template file is public domain.
%
% TUGboat class documentation is at:
%   http://mirrors.ctan.org/macros/latex/contrib/tugboat/ltubguid.pdf
% or
%   texdoc tugboat

\documentclass{ltugboat}

\usepackage{microtype}
\usepackage{graphicx}
\usepackage[hidelinks,pdfa]{hyperref}
\usepackage{fontspec}

%%% Some product name macros
\newcommand{\ELAN}{\acro{ELAN}}
\newcommand{\FLEx}{\acro{FLE}x}
\newcommand{\RenderX}{RenderX}
\newcommand{\SIL}{\acro{SIL}}
\newcommand{\TeXML}{\TeX{}\acro{ML}}
\newcommand{\XLP}{XLingPaper}
\newcommand{\XMLmind}{\acro{XML}mind}
\newcommand{\XXE}{\acro{XML}mind \XML{} Editor}
\newfontfamily{\SpecialCharactersFont}{Arial}

%%% Start of metadata %%%

\title{\XLP{}’s use of \TeX{} Technologies}

% repeat info for each author; comment out items that don't apply.
\author{H.\ Andrew Black}
%\address{Street Address \\ Town, Postal \\ Country}
\netaddress{blackhandrew (at) gmail dot com}
\author{Hugh J.\ Paterson III}
%\address{Street Address \\ Town, Postal \\ Country}
\netaddress{i (at) hp3 dot me}
\personalURL{http://hp3.me}
%\ORCID{0}
% To receive a physical copy of the TUGboat issue, please include the
% mailing address we should use, as a comment if you prefer it not be printed.

%%% End of metadata %%%

\begin{document}
\maketitle

\begin{abstract}
We discuss the use of \TeX{} technologies by \XLP{}, an authoring
tool for producing academically oriented publications with features
required for linguistic publishing. We present the \TeX{} modules used
and the rationale for the history of \XLP{} development.
\end{abstract}

\section{Introduction}

Within the publishing industry, there are several notable products for
producing complex documents in beautiful formats. \TeX{}
\cite{knuth:1984} \cite{knuth:1986} is one of the well known
publishing technologies used to meet these needs.  Since 2000,
\XML{}-based technologies such as
\XSLFO{}\footnote{\tbsurl{w3.org/TR/xsl11}} or the
\TeXML{}\footnote{\tbhurl{getfo.org/texml}} project \cite{lovell:1999}
have been used to integrate content and compose complex documents such
as textbooks and maintenance manuals. Requirements for composing these
large, inter-linked documents birthed the development of tools like
\XMLmind{},\footnote{\tbsurl{xmlmind.com/xmleditor}} The <oXygen/> \XML{} Editor,\footnote{\tbsurl{oxygenxml.com/xml_author.html}}  and
Xpublisher.\footnote{\tbsurl{xpublisher.com/products}} These tools
can be used to compose content within predefined \XML{} structures.
\XLP{}, as discussed in \cite{blackandblack:2012} \cite{black:2009}
\cite{black:2017}, seeks to provide a constrained environment in which
authors of complex works dealing with language descriptions and
linguistic analyses can focus on content structure independently from
the styling requirements of documents. In this way the underlying
design principle of \XLP{} maximizes the \SGML\ design practice of
separating content from presentation. With \XLP{}, authors can keep
content structure independent from page layout information and thereby
provide maximal transfer-ability between publishing styles. The
software does this while providing authors a clear structured
interface for authoring content.

The \XLP{} software has a growing number of users who have
successfully typeset complex documents including:

\begin{itemize}
\item master theses \cite{Wood:2012} \cite{lamicela:2020} \cite{paterson:2021},
\item doctoral dissertations \cite{ebarb:2014} \cite{rasmussen:2018},
\item textbooks \cite{marlett:2019},
\item linguistic grammars \cite{buck:2018},
\item books \cite{bartholomew:2019} \cite{rastorgueva:2012},
\item journal articles \cite{brownie:2013}, and
\item bilingual software documentation \cite{BeadleandLee:2020a} \cite{BeadleandLee:2020b}.
\end{itemize}

\section{What is \XLP{}?}
XLingpaper\footnote{\tbsurl{software.sil.org/xlingpaper}} is a plug-in
to the \XXE{}. \XLP{} benefits from the \XXE{}'s Java-based
implementation which allows it to be used on \MacOSX{}, Windows, and
Linux. Via a \DTD{}, \XLP{} defines several document classes
(articles, books, chapters, etc., as illustrated in Figure~1), in each
case providing document layout sections (paragraphs, examples,
endnotes, etc.). By working within the user-interface of the \XXE{},
as shown in Figure~2, formatting errors are reduced because users are
constrained on where in the document flow they can introduce block and
line level document elements.  That is, first, authors cannot input
page layout instructions directly into the document and second, the
introduction of layout sections within the document flow is
constrained via the \DTD{}.

\begin{figure}
\includegraphics[scale=.425]{Several-different-document-types.png}
\caption{\XLP{} predefined document types via \DTD{}}
\end{figure}

\begin{figure*}
\includegraphics[scale=.243]{XLingPaper-interface.png}
\caption{\XLP{}'s user interface. Left side: document content editing. Right side: block and line level units available for use at the cursor location.}
\end{figure*}

\XLP{} is designed to reduce friction in the process of writing,
composing, and publishing linguistic papers, grammars, and books by
removing common time-sinks related to inconsistent formatting
(especially citations, references, and numbered element like
examples). A full list of benefits to all parties in the publishing
work flow is available \cite{black:2017}. For many, the \PDF{} format
is the quintessential file format for final distribution of publishing
outputs. \XLP{} supports \PDF{} production; however, as illustrated in
Figure~3, \XLP{} can also produce documents with at least five
outputs, all from the same source document:
\begin{itemize}
\item \PDF{} (version 1.5),
\item Web pages (\HTML{} 4),
\item Microsoft Word (.doc),
\item Open Office Writer Document (.odt), and
\item e\acro{PUB}.
\end{itemize}

\begin{figure*}
\includegraphics[scale=.8]{PDFCreation.png}
\caption{\XLP{}'s data processing pipeline to multiple formats}
\end{figure*}

\XLP{} automatically numbers tables, examples, figures, and
sections. It keeps track of internal references to these entities
along with citation references, abbreviations, and gloss
abbreviations.  This keeps numbering and reference links dependable
and automated. \XLP{} also automatically generates indexes, a
table or list of abbreviations used, and a section for references
cited (using a custom references implementation).

Unlike most editing programs which are based on either the \WYSIWYG{}
paradigm or are unconstrained text editors such as those used to code
or produce Markdown, \XLP{} (via the \XXE{}) is a structured editor
much more like the block editors we see in tools like MailChimp\footnote{\tbsurl{mailchimp.com}} or
WordPress's Gutenburg editor,\footnote{\tbsurl{developer.wordpress.org/block-editor}} albeit without the drag-and-drop
features. Rather than visually structuring the document to look the
way it is to be formatted, the author “marks up” the
items in the document according to their kind.  One of the many
benefits that using a \DTD{} provides is that there is a
“grammar” of what a well-formed linguistic document
looks like.  This makes moving, replacing, switching, or reordering
sections, chapters, tables, figures, and examples less error prone
because it prevents users from inadvertently creating ill-formed
documents. The following sections of this paper discuss the \TeX{}
technologies used by \XLP{}.

\section{\XLP{} and \TeX{}}

Linguistic publishing has unique requirements when compared to general
publishing. The following sections provide more detail on the
linguistic publishing context, design requirements and \LaTeX{}
packages used by \XLP{}.

\subsection{ \TeX{} and Linguistic document production}

\TeX{} has long been embraced by linguists. Peter \cite{peter:2004}
writes of a personal communication with Don Knuth where Knuth suggests
that linguists were some of the earliest adopters outside of
mathematicians.  Thiele \cite{thiele:2007} in an interview given in
2007 states that she was typesetting linguistic journals via \TeX{} in
1983---a date prior to the release of Knuth's book on using the \TeX{}
typesetting system \cite{knuth:1984}. Thiele \cite{thiele:1995} gives
an early overview of \TeX{} use in linguistics with mention of
significant repositories outside of \CTAN{}. A slightly more recent
(2004) update by Peter \cite{peter:2004} provides some additional tips
and tools for typesetting common information structures in linguistic
publishing. The \TeX{} community has produced many packages which have
shaped the visual face of publishing in linguistics, including
\texttt{tipa}\footnote{\tbsurl{ctan.org/pkg/tipa}} by Rei
\cite{rei:1996} which provided access to an excellent typeface for
phonetic transcriptions and
\texttt{pst-asr}\footnote{\tbsurl{ctan.org/pkg/pst-asr}} by Frampton
\cite{frampton:2006} for autosegmental representations. Some packages
used in linguistic publishing are not exclusive to linguistics. For
example, Donnelly \cite{donnelly:2013} describes how to use various
packages to draw phonetic pitch traces using \TeX{}. Peter
\cite{peter:2004} and Thiele \cite{thiele:1995} list out and review
(through 2004) various packages across several areas of
lingustics. Among others, they discuss several packages used to draw
syntax trees such as
\texttt{qtrees}\footnote{\tbsurl{ctan.org/pkg/qtrees}} and
\texttt{forest}\footnote{\tbsurl{ctan.org/pkg/forest}} and specialized
packages for presenting examples and interlinear glossed texts such as
\texttt{expex}.\footnote{\tbsurl{ctan.org/pkg/expex}} Their reviews
also discuss packages which are essentially collections of macros such
as \texttt{covington}\footnote{\tbsurl{ctan.org/pkg/covington}} and
\texttt{gb4e}\footnote{\tbsurl{ctan.org/pkg/gb4e}} which serve a
variety of page layout functions targeted at publishing in linguistic
topics.

The \CTAN{} repository currently lists fifty-four different \TeX{}
packages for linguistic
typesetting,\footnote{\tbsurl{ctan.org/topic/linguistic}} though some
of these packages also include capabilities targeted as multi-lingual
or multi-script publications or are specific style sheet
implementations for publications at linguistic programs at
institutions of higher education (there may be more packages which are
not tagged but should be). Several of the packages tagged “linguistic”
pre-date Unicode \cite{unicode:1991} but still see significant
use. Sometimes it is the case that secondary packages are developed in
an attempt to “fix” publishing outputs in different ways to bring
Unicode features along with the features of the original package. For
example, \texttt{tipa} is not Unicode compatible, but the packages
\texttt{unitipa}\footnote{\tbsurl{ctan.org/pkg/unitipa}} and
\texttt{tipauni}\footnote{\tbsurl{ctan.org/pkg/tipauni}} seek to
address different implications of not publishing with Unicode while
giving access to the beautiful typeface of
\texttt{tipa}. Understanding the long history of publishing and the
interdependency that packages have (including the order of loading
packages) presents additional barriers of adoption to new \TeX{}
users.

\TeX{} barriers of adoption are important to the \XLP{} discussion for
two reasons. First, it exemplifies some of the complexities that
\XLP{} seeks to simplify as it presents authors not just a visual
environment for document composition, but also a cohesive output
solution. Second, it speaks to the software design process in finding
the minimal viable product. That is, {\em how much of a software stack is
needed to make a useable software product for lingustic publishing?}
The \TeX{} community is divided on this. While the diagrams in
linguistic books and journals since the 1980's exemplify many
beautiful, sharp, crisp, illustrations created directly in \TeX{},
many trainers of \TeX{} tools,\footnote{Among others, see the
Linguistics Dissertation guide for the University of
Hawai{\SpecialCharactersFont{ʻ}}i at Mānoa \cite{holton:2021},
University of Pennsylvania \cite{dimitriadis:2016}, and Language
Science Press Guidelines \cite{nordhoffandmueller:2020}.} but not
all,\footnote{For counter examples see \cite{liter:2017}
\cite{smithsniderwiegand:2016} \cite{freitagupriemer:2019} and
\cite{priemerufreitag:2019}.} have steered authors towards a more
generic set of packages which do not include specific diagram creating
macros. Rather, they suggest that authors use secondary illustration
tools to generate illustrations and then include them as vector
\PDF{}s or images. In fact this second method is the document
production path that the \XLP{} philosophy follows. That is, \XLP{}
reduces the complexity of the typesetting task for authors by
requiring complex visualizations to be produced via graphical
tools. We have found tools like Figma\footnote{\tbsurl{figma.com}}
and Inkscape\footnote{\tbsurl{inkscape.org}} very helpful in the
graphic production task. The \XLP{} product seeks to lower
barriers of entry, only produce valid documents, and keep the code
base to a minimum.

As mentioned in the discussion of \texttt{tipa}, Linguistic documents
have not always been typeset with Unicode. Unicode was introduced in
1991 and by the early 2000's Unicode along with document and data
storage in \XML{} formats were being heralded in academic linguistics
as a best practice in order to avoid vendor lock-in, increase
interoperability across use cases, and to separate data life-cycles
from encoding or software life-cycles \cite{BirdSimons:2002}
\cite{BirdSimons:2003} \cite{ward:2002}. Due to the heavy reliance on
Unicode by today's practitioners of language documentation and
linguistic work, \XLP{} specifically uses \XeLaTeX{} and
compatible packages to produce \PDF{} outputs. This brings continuity
to the text input process for users across their workflows. It also
makes importing and using language or phonetically transcribed
examples simpler by removing the need to use macros to derive
characters.

\subsection{Design desiderata for \XLP{} outputs via \TeX{}}

Three goals have driven the development of \XLP{}:

\begin{itemize}
\item separation of content and style,
\item software accessibility (license and size), and
\item beautiful multi-format outputs.
\end{itemize}

Deciding how \TeX{} technologies fit within the project has been a
journey. \XLP{} development started in 2001 without any use of \TeX{}
technologies. In 2006, \XLP{} added \XSLFO{} for \PDF{}
production. Prior to 2009, \XLP{} used
\RenderX{}'s \acro{XEP}\footnote{\tbhurl{renderx.com/tools/xep.html}} product to produce \PDF{}
documents.  As far as we know, there are two cross-platform \XSLFO{}
processers written in Java: \RenderX{}'s \acro{XEP} application and
the Apache \acro{FOP}
project.\footnote{\tbsurl{xmlgraphics.apache.org/fop/index.html}}
Using a Java implementation reduces the size of the required stack
because the \XXE{} requires Java.
%At the time (and maybe even now) it did not have certain table-oriented capabilities we need that RenderX has.  I'm not remembering off the top of my head, but I think it included table-and-caption and auto layout support for tables.  I see from https://xmlgraphics.apache.org/fop/compliance.html that these are still not implemented.
\XSLFO{} processors can have various degrees of implementation of the
\XSLFO{} standard. \RenderX{} has some limitations which affect page
layout but has better coverage than the Appache FOP project which
lacks certain required table-oriented
capabilities.\footnote{\tbsurl{xmlgraphics.apache.org/fop/compliance.html}}
The limitations of \RenderX{} are discussed in Section 6. In 2009
plans were made to add \XeLaTeX-based output to \XLP{} because, while
there was a free version of \RenderX{}, the output contained a
watermark.  By implementing the ability to export to \PDF{} via
\XeLaTeX, watermarks could be avoided all together. The \XeLaTeX{}
method of \PDF{} production is now the default method to produce
\PDF{} documents, although the \RenderX{} method is still possible.

Maintaining a separation of content and style in the \XLP{}
envionrment was a key design requirement. When the \XeLaTeX{} method
of \PDF{} production was introduced, \XLP{} already had a way to
format output per a user-created publisher style
sheet—allowing great flexibility due to the separation of
style and content. Using \TeX{} technologies meant the developer
(Andrew Black) needed to be able to map from an \XLP{} publisher style
sheet to \XeLaTeX{}. It was known that \LaTeX{} was the ideal \TeX{}
implementation to target. However, pure \LaTeX{} came with predefined
output formatting for front matter, chapters, sections, back matter,
etc.  Pure \LaTeX{}, then, would not allow direct control of formatting
of all of these per an \XLP{} user-defined publisher style sheet.
This required overriding these standard features of \LaTeX{} with a
custom implementation of the \TeX{} commands needed to control
formatting. \XLP{} takes a custom approach in implementing flexibility
here.  The programmer of \XLP{} recently discovered
\texttt{memoir}\footnote{\tbsurl{ctan.org/pkg/memoir}}
\cite{wilson:2007} \cite{wilson:2021}. As a package, \texttt{memoir}
accomplishes many of the same tasks and could be considered to replace
some of the custom code if it were shown to be easy to implement and
that the size of the total \XLP{} code base would be reduced.

The distributability of the software was also seen as a design
requirement. Distributability is understood to have two components:
license and accessability, including size.

From the outset, \XLP{} was designed to be costless to the end
user. It is licensed under the MIT license, and its code is currently
available on Github.\footnote{\tbsurl{github.com/sillsdev/XLingPap}}
The \XXE{} had a costless Personal Use License that met this
requirement for the vast majority of the target audience of \XLP{}.
The few \XLP{} users who did not meet the terms of that license most
likely would be able to afford to purchase (or have their organization
purchase) a professional license of the \XXE{}.  The actual \XLP{}
plug-in has always been free.

The software size of \XLP{} is a major design influencer.  Many of the
expected users of \XLP{} live and work in places around the world
where Internet connections are characterized by high costs, low
bandwidth capacity, and general unavailability.  Therefore, the
download required to install \XLP{} needed to be as small as
possible. On Windows the current full \XLP{} installer is 146MB, and
the \XXE{} installer is 116MB. Both are required. This stands in
contrast to the \TeX{}Live 2010 installer which has a size of about
1.2GB when downloaded and 2.38GB when uncompressed.  The size
constraint impacts \XLP{} because its distribution must be independent
of larger mainstream \TeX{} distribution solutions which have a large
footprint.  This, of course, includes \TeX{}Live.  Therefore the
developer identified which \LaTeX\ packages and binaries were needed
and created a custom installation package which met the required
specifications.

\XLP{} currently uses the following \LaTeX{} packages (in
alphabetical order):

\begin{tabular}{@{}ll@{}}
\texttt{attachfile2} & \texttt{lineno}\\
\texttt{booktabs} & \texttt{longtable}\\
\texttt{calc} & \texttt{lscape}\\
\texttt{color} & \texttt{mdframed}\\
\texttt{colortbl} & \texttt{multirow}\\
\texttt{etoolbox} & \texttt{normalem}\\
\texttt{fancyhdr} & \texttt{polyglossia}\\
\texttt{fontspec} & \texttt{setspace}\\
\texttt{footmisc} & \texttt{tabularx}\\
\texttt{hyperref} & \texttt{xltxtra}\\
\end{tabular}

The twenty \LaTeX{} packages that are part of the custom \XLP{}
distribution are still rather large (29MB) for someone for whom
Internet bandwidth is an expensive and inconsistent commodity. To
reduce bandwidth requirements two assumptions were made which have
more or less proven to obtain. The first assumption that the developer
made was that the twenty packages and binaries would not need to
change over time; in contrast, the second assumption was that \XLP{}
would acquire new features and need bug fixes. These assumptions
resulted in an architecture where page layout information expressed in
\XML{} is translated via custom \TeX{} commands to either \TeX{}
directly or to commands understood by \LaTeX{} packages distributed
with \XLP{}. This abstraction layer was then executed when the
\XeLaTeX{} file was processed. This middle layer has granted \XLP{}
flexibility in adding new code and capabilities while keeping the
“heavy” \LaTeX\ packages stable. The net result is a
“heavy” first install package, but light-weight
upgrade packages (6.21MB). In the thirteen year history of
development, there have been a few occasions where upgrades have
required the download of new “heavy” packages. One
such case was when the ability to use framed units was added. These
elements depend on the
\texttt{mdframed}\footnote{\tbsurl{ctan.org/pkg/mdframed}} package
\cite{DanielandSchubert:2013}. The architecture separating stable
packages from custom code, however, has generally worked out well and
kept update sizes low.  Appendix~A lists the custom commands used.

\subsection{\PDF{} production}

We know of two pathways for converting \XML{} content into PDFs. The
first is via \XSLFO{}, and the second is via \TeXML{} which converts
\XML{} content to \TeX{} formatted documents for further processing to
\PDF{}. Given certain limitations in both \XSLFO{} and \TeXML{},
\XLP{} uses a custom (or third) method. When an author instructs
\XLP{} to produce \PDF{} output via \XeLaTeX{}, \XLP{} produces a
\TeXML{}-like \XML{} file. This is then converted into a
\LaTeX{} formatted document via a set of \XSLT{} transforms and
processed via \XeLaTeX{} to produce the \PDF{}.  Figure~3 contains a
diagram of the data handling process.

\subsection{\TeXML{}}

\TeXML{} was discovered in the process of planning for the transition
of the default \PDF{} renderer from \RenderX{} (an \XSLFO{} processor) to
\XeLaTeX{}. Initial analysis conducted in 2009 understood \TeXML{} to
have two infelicities for use-cases required in linguistic publishing
with \XLP{}:

\begin{enumerate}
\item \TeXML{} has Python as a dependency and the developer did not
  want to require \XLP{} users to install a version of Python
  specifically for \TeXML{}.  This is especially the case since that
  version of Python might conflict with other installed versions of
  Python on their operating systems.  Moreover, this approach would
  make the installation package for \XLP{} much larger due to the
  inclusion of Python.
\item \XLP{} users require a high degree of control for white
  space. The fine grain control of whitespace was not clearly possible
  via \TeXML{}.
\end{enumerate}

\subsection{Control characters}

Even with the use of Unicode in the text of documents, there are some
features of typesetting with \TeX{}-based implementations which
require the use of control characters. Additionally, \XML{} also has
control characters. In \TeX{} these include \texttt{{[}},
  \texttt{{]}}, \texttt{\textless{}}, and
\texttt{\textgreater{}}. When transforming data between \XML{} and
\TeX{}, \TeX{} control characters and commands need to be escaped to
ensure proper data processing. This has been implemented via Java
since Java was already present in the dependency stack due to the
\XXE{} requiring it. Additionally, some small methods have been
written in Java to provide additional access to features via the
graphical user interface.  These include adding rows and/or columns to
tables, automatically converting glosses to abbreviation references
and importing references from various \XML{} formats.

\subsection{Ling-\TeX{}}

One might ask, “Why not add more linguistic related \TeX{} packages to
the available stack, or use those instead of creating custom code?”
The answer has two simple parts: First, in 2009 the linguistic
capabilities of \TeX{} packages were different than they are today.
Second, \XLP{} is more than a \TeX{} document producer. Some authors
\cite{BeadleandLee:2020a} \cite{BeadleandLee:2020b} use \XLP{} to
manage multilingual content on websites.

\begin{figure}
\includegraphics[scale=.525]{Outputs.png}
\caption{\XLP{} combines style and content information contained
  in its custom \XML{} and then exports it into three different formats
  for further processing.}
\end{figure}

Besides \TeX{}, \XLP{} also produces \XSLFO{} and
\XHTML{}/\CSS{} outputs. When new features are considered for typesetting design, all output formats need to be considered.


When the developer began to implement the
\XeLaTeX{}-based output, he discovered the Ling-\TeX{}
group\footnote{\tbsurl{web.archive.org/web/20150702123633/http://heim.ifi.uio.no/~dag/ling-tex}}
which also ran the Ling-TeX mailing list from
1995–2018.\footnote{\tbsurl{ling-tex.ifi.uio.narkive.com}} Ling-TeX
seemed to be the locus of activity in linguistic typesetting even
though other web pages discussing linguistics and \TeX{} also existed,
e.g.,
Essex,\footnote{\tbsurl{essex.ac.uk/linguistics/external/clmt/latex4ling}}
UPenn.\footnote{\tbsurl{ling.upenn.edu/advice/latex.html}} Today,
now that the mailing list is no-longer in operation, many of the
mailing list participants can be found interacting on the \TeX{}
stackexchange.\footnote{\tbsurl{tex.stackexchange.com}}

State-of-the-Art for \TeX{}-based linguistic publishing in 2009, as
recommended by the Ling-\TeX{} website, suggested using
\texttt{covington} and {\em ling-mac}—the list of macros discussed by
Thiel in \cite{thiele:1995}. These macros were used to solve similar
use cases, among others, to those already implemented by \XLP{}. The
more commonly implemented typesetting tasks are outlined in Section~4.
%These figure refs need to be re-evaluated for accuracy since I added
%another figure.
Initial analysis of \texttt{covington} and other packages revealed
limitations in the number of rows an interlinear text example could
display, a typesetting capability \XLP{} had already overcome via
\XSLFO{} processing using \RenderX{}. \XLP{} had the following
capabilities for typesetting interlinears:

\begin{itemize}
\item no limits on the number of lines within an interlinear grouping;
\item no limits on the number of free translation and literal
  translation lines;
\item the ability to include a source reference within the
  interlinear; and especially
\item the ability to tag interlinear items with an \acro{ISO} 639-3
  code for the language used in the interlinear.
\end{itemize}

At the time the best solution given the state of the \TeX{} packages
available was custom \TeX{} scripts, although now similar features may
be possible via other packages. See Pellard \cite{pellard:2019} for
discussion of approaches in \TeX{} and his solution
\texttt{typgloss}.\footnote{\tbsurl{github.com/tpellard/typgloss}}
Figures~5–7 contain example output illustrating some of the special
capabilities \XLP{} offers.

\begin{figure*}
\includegraphics[scale=.97]{ExamplePDFInterlinear.png}
\caption{Interlinear example from \cite{marlett:2012}. Note the
  example numbers on the left followed by example groups (a) and
  (b). Each interlinear then also has a language indicator in square
  brackets. Customization allows for as many rows per group as is
  required. Finally, on the right the hyperlinked citation to the
  reference for the source text is indicated.}
\end{figure*}

\section{Typesetting tasks \XLP{} users often encounter}

Linguistic documents have several formatting needs that other kinds of
documents do not. This section discusses some of them.

\subsection{Numbered example layouts}

Linguistic documents usually have many numbered examples.  The prose
often refers to examples near the exemplar material (Figures, Tables,
Examples, etc.) or to previous examples.  \XLP{} automatically keeps
track of the ordinal indicators while allowing for different systems
of numeration (1,2, 3; a,b,c; i, ii, iii, etc.).  Authors, and
publishing style sheets often make use of table-like design layouts
including: lists of words along with their glosses (as shown in
Figure~6) and interlinear clauses (as shown in Figure~5), with some
cases even having headings in portions of the example.

\begin{figure*}
\includegraphics[scale=1.0]{GraphitePDF-Slide24.png}
\caption{List of words as seen in \cite{rasmussen:2018}}
\end{figure*}

\subsection{Interlinear glossed texts}

There is a long tradition within linguistics and language study of
presenting phrases containing different languages (but the same
content) as interlinear texts. Di-Biase-Dyson et
al. \cite{DiBiaseDysonEtAl:2009} trace the practice back as far as the
1652 publication of Kircher \cite{Kircher:1652}. More recent
publications display significant variation in page layout related to
interlinear glossed texts and interlinear examples. Variation exists
in three dimentions:

\begin{itemize}
\item content,% (headings, line limits for gloss tier, original tier, translation tier, free translation tier),
\item data-structure of the encoding, and
\item page layout.% (wrapping, word alignement/morpheme alignement, grouping of lines, sub-examples)
\end{itemize}

A full deomonstration of the variation in content and its positioning
across common style sheets in linguistics is beyond the scope of this
paper. Significant variations include the presence or absence of the
following elements:

\begin{itemize}
\item index elements such as example numbers or sub-numbers (as shown
  in Figure~5),
\item headings to the interlinear,
\item speaker indicator,
\item language indicator,
\item citation indicator pointing to the lager text from which the
  exemplar element is taken (see Figure~5 for an example), and
\item limits on the number of rows in the original, gloss,
  translation, and free translation tiers.
\end{itemize}

Existing \TeX{} packages approach these content requirements in
different ways. As far as we can tell, the following commonly used
packages for interlinear glossing all have limitations to some
degree. The \texttt{expex} package does not offer a content solution
for the language code or the citation. The package
\texttt{langsci-gb4e},\footnote{\tbsurl{ctan.org/pkg/langsci-gb4e}} a
fork of \texttt{gb4e}, supports the {\em Leipzig Glossing
  Rules},\footnote{\tbsurl{eva.mpg.de/lingua/pdf/Glossing-Rules.pdf}}
a commonly adopted set of linguistic typesetting conventions. However,
while the {\em Leipzig Glossing Rules} do call for the language name
or identifier to appear on the right hand side of the interlinear
glossed text, it does not have a place for the citation. The package
\texttt{linguex} does not have either language or citation content
places built in. With these considerations, it was clear in 2009 that
\XLP{} offered more to authors than any single package in the \TeX{}
ecosystem. In order to implement exsiting \XLP{} features, it meant
creating custom \TeX{} scripts to implement interlinear texts.
%This is an example of the kind of pain people go through:
%%https://tex.stackexchange.com/questions/284454/multiline-language-linguistic-glosses

There are still some reasons related to data structure for considering
\XLP{}. Interlinear glossed texts are often stored in one of a few
formats: \ELAN{} files,\footnote{\tbsurl{archive.mpi.nl/tla/elan}}
\FLEx{} Text files,\footnote{\tbsurl{software.sil.org/fieldworks}}
Standard Format files,\footnote{\tbsurl{software.sil.org/toolbox}}
\LaTeX{} files,\footnote{For examples see \cite{schenneretal:2016} and
\cite{so:2021}.} or custom project-specific \XML{} files. Moving
content from analysis and markup tools to typeseting tools is an ever
present need for linguists. Several tools such as \ELAN{} and \FLEx{}
have well established workflows for data transfer
\cite{SalffnerGavid:2014}. \FLEx{} is often considered the tool of
choice for many field linguists, language documentors, and
lexicographers. For many linguists entering the field, it is the tool
of choice over older tools like Toolbox (which uses standard format
files) due to built in collaborative features and grammar parsers
\cite{BeierandMichael:2022}. Interlinear text in \FLEx{} can be
exported directly into \XLP{} documents. This presents \FLEx{} users
the opportunity to typeset their texts rather easily. Using the \XML{}
document referencing strategy allows authors to reflow typesetting
outputs easily if they make content changes in their \FLEx{}
enviroment.  We have also had reports of linguists using the
\FLEx{}-\XLP{} publication pathway to typeset \ELAN{} texts in
\LaTeX{} documents. Users capture the \XeLaTeX{} document prior to
rendering and then copy the relevant \TeX{} sections to their primary
document and add any required packages to the header of their \TeX{}
document.
%Hugh: this doe not ring a bell with me.  Who/what do you have in mind here? %Andy: Abby is her name she was a post-doc at SOAS at the time.

Still finally, there is the matter of page layout. The main types of
variation in page layout we have seen include the grouping of lines
into sets or subsets (see Figure~5 for example), the labeling of sets
and subsets, wrapping of interlinear glosses across lines (recall that
these may themselves include three or more lines), and the alignment
of the various elements of content within the interlinear glosses. We
have seen word and morpheme aligned interlinears.  \XLP{}
automatically wraps interlinears which makes the author's job much
easier.  Figure~7 in FC:1 and FC:2 demonstrate the wrapping of
interlinear glossed texts. It does so by formatting each aligned word
in an \texttt{hbox} and then having \XeLaTeX{} put them together in a
hanging indent paragraph. This is based on the work of Kew \& McConnel
1990 \cite{kew:mcconnel}.

\begin{figure*}
\includegraphics[scale=0.97]{TextPDF-Slide21.png}
\caption{Wrapped interlinear text as seen in \cite{nmeAndMarlett:2011}.}
\end{figure*}

\subsection{Gloss abbreviations}

Linguists standardly use glosses for indicating the meaning of pieces
of words (morphemes). One common set of glosses is the Leipzig
Glosses. However, Leipzig Glosses are not universially used for
several reasons including:

\begin{itemize}
\item some authors have established their own tradition within their
  works which they started prior to the release of the Leipzig
  Glosses,\footnote{For examples of the variation and scope of
  coverage consider the works of Greville Corbett, William Croft,
  Denis Creissels, and Martin Haspelmath.}
\item the typeset examples are quoted from a database which does not
  use Leipzig Glosses,
\item they are not comprehensive, and
\item they are not theoretically sufficient for some linguists.
\end{itemize}

\XLP{} approaches this by providing built-in access to Leipzig
Glosses, but also allowing the author to fine-tune a set of
abbreviations and their definitions.  When producing the output,
\XLP{} creates hyperlinks between the abbreviation and its
definition. This allows users to quickly find the meaning of glosses
and for the automatic generation of a table or list of abbreviations
used.

%1. LaTeX and text mining.
%2. Language code in the XML
%3. IGTs are old.
%4. Leipzig is a publishing standard which is making its way into corpora.
%5. There are non-leipzig abbrs, and extensions to leipzig.
%6. XLingPaper has been used as a transfer from flex to LaTeX.

%IGTs
%\cite{lehmann:2004}

%Hughes, Baden, Steven Bird, and Catherine Bow. 2003. “Encoding and Presenting Interlinear Text Using XML Technologies.” In Proceedings of the Australasian Language Technology Workshop 2003, 61–69. Melbourne, Australia. https://www.aclweb.org/anthology/U03-1008.
%Sachse, Frauke, and Michael Dürr. 2016. “Morphological Glossing of Mayan Languages under XML: Preliminary Results: Working Paper 4.” PDF. Textdatenbank und Wörterbuch des Klassischen Maya. doi:10.20376/IDIOM-23665556.16.WP004.EN.
%Lahaussois, Aimée. 2016. “The Translation Tier in Interlinear Glossed Text: Changing Practices in the Description of Endangered Languages.” In Translation as Innovation: Bridging the Sciences and the Humanities, edited by Patricia Phillips-Batoma and Florence Zhang, 261–78. Dalkey Archive Press. https://hal.archives-ouvertes.fr/hal-01895439.
%Lehmann, Christian. 1982. “Directions for Interlinear Morphemic Translations.” Folia Linguistica 16 (1–4): 199–224. doi:10.1515/flin.1982.16.1-4.199.
%Schmidt, Thomas. 2003. “Visualising Linguistic Annotation as Interlinear Text.” In Arbeiten Zur Mehrsprachigkeit. Folge B, Sonderforschungsbereich 538. Hamburg, Germany: Universität Hamburg. https://www.exmaralda.org/files/Visualising-final.pdf.
%Xia, Fei, William D. Lewis, Michael Wayne Goodman, Glenn Slayden, Ryan Georgi, Joshua Crowgey, and Emily M. Bender. 2016. “Enriching a Massively Multilingual Database of Interlinear Glossed Text.” Language Resources and Evaluation 50 (2): 321–49. doi:10.1007/s10579-015-9325-4.
%Zhou, Zhong, Lori Levin, David R. Mortensen, and Alex Waibel. 2020. “Using Interlinear Glosses as Pivot in Low-Resource Multilingual Machine Translation.” ArXiv:1911.02709 [Cs], March. http://arxiv.org/abs/1911.02709.
%Arkadiev, Peter, and Nicole Nau. 2015. “Towards a Standard of Glossing Baltic Languages: The Salos Glossing Rules.” Baltic Linguistics 6 (December): 195–241. doi:10.32798/bl.398.
%There is also the Madakan rigor, and the african database.
%CHEN, Yujie, Hilario de Sousa, Jian WANG, Jian NI, Xingxing LI, Weirong CHEN, and Hilary Chappell. 2014. “The Leipzig Glossing Rules and Its Application in the Research of Chinese Grammar--《Dialect》2014年01期.” 方言 [Dialect, lect]. http://en.cnki.com.cn/Article_en/CJFDTOTAL-FYZA201401001.htm.


\subsection{Bibliographies}

For better or worse \XLP{} has rolled its own bibliography
solution. Import options are provided for \acro{MODS} and EndNote
\XML{} formats. This enables users to import from tools like
EndNote,\footnote{\tbsurl{endnote.com}}
Zotero,\footnote{\tbsurl{zotero.org}} and
JabRef.\footnote{\tbsurl{jabref.org}} \XLP{} uses custom \TeX{}
scripts to output \TeX{} code for final rendering. It does not rely on
\BibTeX{} or \BibLaTeX{}.

\begin{figure*}
\includegraphics[scale=0.6]{Chinese.png}
\caption{An \XLP{} bibliography demonstrating mixed Latin and Chinese
  scripts.}
\end{figure*}

\section{Outputs \LaTeX{} allow that others do not}

While \XLP{} has a large array of linguistically-oriented formatting
capabilities across all output formats, there are some that only the
\XeLaTeX{} output can produce.  This is, of course, due to the
formatting power of \TeX{} and \XeLaTeX{}.

\subsection{Automatically wrapping interlinears}

One of the most popular features of \XLP{} is its ability to
automatically wrap long interlinear examples and lines in interlinear
texts.  

\subsection{Font rendering}
%for discussing fonts several works need to be added to the bibliography: 
% Correll, Sharon. 2000. “Graphite: An Extensible Rendering Engine for Complex Writing Systems.” Presentation Paper presented at the 17th International Unicode Conference, San Jose, California. http://rabbits.continuation.org/w/images/7/73/Graphite_paper.pdf.
%Kew, Jonathan. 2007. “XeTeX Live.” TUGboat 29 (1): 146–50. http://root.tug.org/tugboat/tb29-1/tb91kew.pdf.

\XeLaTeX{} renders fonts extremely well.  We show three cases where \RenderX{} and/or \XHTML{} outputs have font rendering issues while \XeLaTeX{} does not.

%The issue here as far as I can tell is that XSL-FO does not have a way to access TT font features which are not pre-described in the XSL-FO standard. Additionally XSL-FO adopted OT rather than TT. CSS, which is relied on by browsers does marginally better, in that it acknowledges more perscribed features but does not allow access to all features of a font. The tone staves issue does not seem to be graphite based. Will Robertson. Advanced font features with XETEX—the fontspec package. TUGboat, ():–, .

One of Andy's CSS problems can be solved with https://www.w3.org/TR/2018/REC-css-fonts-3-20180920/#propdef-font-size-adjust

https://www.w3.org/TR/2018/REC-css-fonts-3-20180920/#font-feature-resolution

\begin{figure*}
\includegraphics[scale=0.86]{FontAlignmentRenderX.png}
\includegraphics[scale=0.6]{FontAlignmentXHTML.png}
\includegraphics[scale=0.86]{FontAlignmentXeLaTeX.png}
\caption{Ascender/descender font differences: The \RenderX{} output is
  on the left; \XHTML{} output is in the middle; the \XeLaTeX{} output
  is on the right.}
\end{figure*}

First, when a line of text contains material rendered in different
fonts on the same line, some fonts (such as Charis \SIL{}) may not
line up evenly in the vertical direction.  See Figure~9.  This
mismatch is due to the two sets of fonts having different ascender and
descender values. In order to overcome this, one has to add custom
commands to deal with the font that differs.

\begin{figure*}
\includegraphics[scale=0.96]{StackedDiacriticsRenderX.png}
\hspace*{.25in}  
\includegraphics[scale=0.96]{StackedDiacriticsXeLaTeX.png}
\caption{Stacked diacritics on the third word from the left: The \RenderX{} output is on the left; the \XeLaTeX{} output is on the right.}
\end{figure*}
%By the way, this is just plain unicode not anything special.

Second, the \RenderX{} way of producing \PDF{} cannot
handle stacked diacritics, but the \XeLaTeX{} way does it very well.  See Figure~10.

\begin{figure*}
\includegraphics[scale=1.25]{ToneContoursRenderX.png}
\includegraphics[scale=0.85]{ToneContoursXHTML.png}
\includegraphics[scale=1.25]{ToneContoursXeLaTeX.png}
\caption{Tone contour rendering: The \RenderX{} output is
  on the left; \XHTML{} output is in the middle; the \XeLaTeX{} output
  is on the right.  Only the \XeLaTeX{} output is correct.}
\end{figure*}

Third, \XeLaTeX{} can even handle special features requiring
Graphite\footnote{\tbsurl{graphite.sil.org}} processing.  Figure~11 illustrate special contour tone handling.  Of the three output renderings, only \XeLaTeX{} renders these correctly.

\subsection{Hyphenation for non-English languages}

Since we use the \texttt{polyglossia} package, one can write an
\XLP{} document in a non-English language and \XeLaTeX{} will
hyphenate according to that language’s hyphenation rules.

%We should list out these languages. The author was in the audiance
%and said he was interested in adding to polygossia if we had input.
%@Hugh: See Appendix C in the XLingPaper user documentation for the
%list.  There are 62 languages listed.  Off the top of my head, the
%only instances I know of where polyglossia did not already have the
%needed hyphenation language were for some literacy documents in Seri
%that Steve Marlett used XLingPaper for.

\subsection{Author contact information}

\XLP{} allows one to define a set of contact information for
authors.  Only the \XeLaTeX{} output is able to format them correctly.

\subsection{Vertical fill}

For title page material, only the \XeLaTeX{} output allows using
vertical fill between items.  The other outputs require using overt,
fixed spacing values.

\subsection{Blank page}

When one wants a totally blank even-numbered page between a final
odd-numbered page and the next odd-numbered page which begins, say, a
chapter or appendix, only the \XeLaTeX{} approach is able to do this.

\section{Features other outputs have that the \LaTeX{} output does not}

\XeLaTeX{} does not allow for custom table cell padding and spacing.
Having said that, the developer cannot remember any \XLP{} user ever
asking for a way to do this for the \XeLaTeX{} output.  It just looks
great.

Background color is not available for section titles.

Section 11.17.1.1 “Known limitations of using
\XeLaTeX{}” in the \XLP{} user documentation lists known
problems.
%  See \tbsurl{software.sil.org/downloads/r/xlingpaper/resources/documentation/xxe7/UserDocXMLmind.htm#sXeTeXLimitations}.

\section{Conclusion}

While the \XLP{} approach to composing documents via DTD controlled
user interface limitations has great value in and of itself, the fact
that it can produce great looking output via \XeLaTeX{} makes the
learning curve rewarding.  We feel that being able to produce \PDF{}
via \XeLaTeX{} has made \XLP{} a fantastic tool for linguists.

\appendix
\section{Custom \TeX{} commands}
\XLP{} has a number of custom commands that enable it to handle
various tasks in a way that is consistent with our desired outcomes.
The following lists some of them in a schematic way:

\begin{tabular}{@{}lp{1.5in}@{}}
{\bf Command for} & {\bf Purpose}\\
Table of contents & Store and retrieve page numbers; format the
contents.\\ Lists & Numbered and bulleted lists with control over
indents, etc.\\ Examples & Example number and example content, where
the content can be a line, a list of lines, a set of words, a list of
a set of words, interlinear, a list of interlinears, etc.\\
Indexes & Handle keeping track of \XLP{}’s indexing
capability, including page numbers.\\
Interlinears & Handle lines in an interlinear text or example,
including dealing with an \acro{ISO} 639-3 code in an interlinear
example.\\
Block quotes & Handle special cases needed for block quotes.\\
Table headers & Attempt to calculate a column’s width via its
contents.\\
\end{tabular}

\bibliographystyle{tugboat}
%\nocite{book-minimal}      % make the bibliography non-empty
%\bibliography{xampl}       % xampl.bib comes with BibTeX
\begin{thebibliography}{99}

\bibitem{bartholomew:2019}{Bartholomew, Doris A, and Louise C Schoenhals. 2019. {\em Bilingual Dictionaries for Indigenous Languages}. Edited by Thomas L Willett. 2nd ed. Tlalpan, Ciudad de México, México: Instituto Lingüístico de Verano, A. C. [SIL Intrenational in Mexico]. \tbsurl{sil.org/resources/archives/80401}.}

\bibitem{BeadleandLee:2020a}{Beadle, Jennie, and Matthew
  Lee. 2020a. {\em Paratext 9 Manual – in English}. \SIL{}
  International. \tbsurl{lingtran.net}.}

\bibitem{BeadleandLee:2020b}{Beadle, Jennie, and Matthew
  Lee. 2020b. {\em Paratext 9 Manual – in French}. \SIL{}
  International. \tbsurl{outilingua.net}.}

\bibitem{BeierandMichael:2022}{Beier, Christine, and Lev
  Michael. 2022. {\em Managing Lexicography Data: A Practical,
    Principled Approach Using \FLEx{} (FieldWorks Language Explorer)}. In
  The Open Handbook of Linguistic Data Management, edited by Andrea
  L. Berez-Kroeker, Bradley McDonnell, Eve Koller, and Lauren
  B. Collister, 301–14. Open Handbooks In Linguistics. Cambridge,
  Massachusetts: The MIT
  Press. \tbsurl{doi.org/10.7551/mitpress/12200.003.0029}.}

\bibitem{BirdSimons:2002}{Bird, Steven, and Gary Simons. 2002. Seven Dimensions of Portability for Language Documentation and Description. In \acro{ISCA SALTMIL SIG}: “Speech and Language Technology for Minority Languages,” 23–30. Las Palmas, Canary Islands, Spain: \acro{ELRA}. \tbhurl{lrec-conf.org/proceedings/lrec2002/pdf/ws15.pdf#page=29}.}

\bibitem{BirdSimons:2003}{Bird, Steven, and Gary Simons. 2003. Seven Dimensions of Portability for Language Documentation and Description. {\em Language} 79 (3):557–82. \tbsurl{jstor.org/stable/4489465}.}

\bibitem{blackandblack:2012}{Black, Cheryl A., and H. Andrew
  Black. 2012. {\em Grammars for the People, by the People, Made
    Easier Using \acro{PAWS} and XlingPaper}. In Electronic Grammaticography,
  edited by Sebastian Nordoff, 103–28. LD\&C Special
  Publication 4. Honolulu, Hawai{\SpecialCharactersFont{ʻ}}i: University of Hawai{\SpecialCharactersFont{ʻ}}i
  Press. \tbhurl{hdl.handle.net/10125/4532}.}

\bibitem{black:2009}{Black, H. Andrew. 2009. Writing Linguistic Papers
  in the Third Wave.  {\em \SIL{} Forum for Language Fieldwork} 2009
  (004): 11  pages. \tbsurl{sil.org/resources/publications/entry/7790}.}

\bibitem{black:2017}{Black, H Andrew. 2017. {\em Why Learn to Use
    \XLP{}}. Dallas, Texas: \SIL{}
  International. \tbsurl{software.sil.org/downloads/r/xlingpaper/resources/documentation/WhyUseXLingPaper.pdf}.}

\bibitem{brownie:2013}{Brownie, John. 2013. Adverbs in the
Mussau-Emira Verb Phrase. {\em Language \& Linguistics in Melanesia}
31(1):1–11. \tbsurl{langlxmelanesia.com/issues}.}

\bibitem{buck:2018}{Buck, Marjorie J. 2018. {\em Gramática del amuzgo
    Xochistlahuaca, Guerrero}. (Serie de gramáticas de lenguas
  indígenas de México No16.) Tlalpan, Ciudad de México, México:
  Instituto Lingüístico de Verano, A.C. [\SIL{} International in
    Mexico]. \tbsurl{sil.org/resources/archives/75518}.}

\bibitem{DanielandSchubert:2013}{Daniel, Marco, and Elke
  Schubert. 2013. {\em The \texttt{mdframed} Package: Auto-split Frame
    environment} version 1.9b.}

\bibitem{DiBiaseDysonEtAl:2009}{Di-Biase-Dyson, Camilla, Frank Kammerzell, and Daniel A Werning. 2009. Glossing Ancient Egyptian. Suggestions for Adapting the Leipzig Glossing Rules. {\em Lingua Aegyptia. Journal of Egyptian Language Studies} 17: 343–66. \tbsurl{wwwuser.gwdg.de/~lingaeg/lingaeg17.htm}.}

\bibitem{dimitriadis:2016}{Dimitriadis, Alexis. 2016. {\em TeX/LaTeX Information}. Web page. \tbsurl{ling.upenn.edu/advice/latex.html}.}

\bibitem{donnelly:2013}{Donnelly, Kevin. 2013. Representing Linguistic Pitch in \XeLaTeX{}. {\em TUGboat} 34 (2): 223–27. \tbhurl{tug.org/TUGboat/tb34-2/tb107donnelly.pdf}.}

\bibitem{ebarb:2014}{Ebarb, Kristopher J. 2014. {\em Tone and
    variation in Idakho and other Luhya varieties}. University of Indiana  Ph.D. dissertation. \tbsurl{pqdtopen.proquest.com/doc/1625743679.html?FMT=ABS}.}

\bibitem{frampton:2006}{Frampton, John. 2006. {\em Pst-Asr: Tex Macros for Typesetting Autosegmental Representations}. Version:1.1. \CTAN{}. \tbhurl{bakoma-tex.com/doc/generic/pst-asr/pst-asr-doc.pdf}.}

\bibitem{frampton:2012}{Frampton, John. 2012. {\em ExPex for Linguists: Example Formatting, Glosses, and Reference}. Version: 4.1. \tbhurl{mathserver.neu.edu/~ling/tex/expex/base/doc/expex-doc.pdf}.}

\bibitem{freitagupriemer:2019}{Freitag, Constantin and Antonio Machicao y Priemer. 2019. {\em LaTeX-Einführung Für Linguisten}. Berlin, Germany: Humboldt-Universität zu Berlin. \tbsurl{doi.org/10.13140/RG.2.2.29299.27682}.}

\bibitem{holton:2021}{Holton, Gary. 2021. {\em Writing You Dissertation with \LaTeX}. Typescript. Hawai{\SpecialCharactersFont{ʻ}}i. Github.com. \tbsurl{gmholton.github.io/files/DissertationWriting.pdf}.}

\bibitem{kew:mcconnel}{Kew, Jonathan and Stephen McConnel. 1990.  {\em
    Formatting Interlinear Text.} Occasional Publications in Academic
  Computing, Number 17. Dallas, Texas: Summer Institute of
  Linguistics.}

\bibitem{Kircher:1652}{Kircher, Athanasius. 1652. {\em Œdipus Ægyptiacus, hoc est Vniuersalis Hieroglyphicæ Veterum Doctrinæ temporum iniuria abolitæ Instauratio}. Opus ex omni Orientalium doctrina \& sapientia conditum, nec non viginti diuersarum linguarum authoritate stabilitum, Romæ: Ex Typographia Vitalis Mascardi.}

\bibitem{knuth:1984}{Knuth, Donald Ervin. 1984. {\em The \TeX book}.
  A. Computers \& typesetting. Reading, Massachusetts: American
  Mathematical Society; Addison-Wesley.}

\bibitem{knuth:1986}{Knuth, Donald Ervin. 1986. {\em \TeX: The
    Program.} B. Computers \& typesetting. Reading, Massachusetts:
  Addison-Wesley.}

\bibitem{lamicela:2020}{Lamicela, Andrew Charles. 2020. {\em
    Distinguishing Passive from MP2-marked Middle in Koine
    Greek}. University of North Dakota
  M.A. thesis. \tbsurl{commons.und.edu/theses/3277}.}

\bibitem{lehmann:2004}{Lehmann, Christian. 2004. {\em Interlinear
    morphemic glossing}. In Morphologie: Ein internationales Handbuch
  zur Flexion und Wortbildung Morphology: an international handbook on
  inflection and word-formation, edited by Geert E Booij, Christian
  Lehmann, Joachim Mugdan, and Stavros Skopeteas,
  2:1834–57. Handbücher zur Sprach- und Kommunikationswissenschaft
  Handbooks of Linguistics and communication science 17. Berlin ; New
  York: Walter de
  Gruyter. \tbsurl{doi.org/10.1515/9783110172782.2.20.1834}.}

\bibitem{liter:2017}{Liter, Adam. 2017. {\em LATEX Workshop (for Linguists)}. \tbsurl{adamliter.org/content/LaTeX/latex-workshop-for-linguists.pdf}.}

\bibitem{lovell:1999}{Lovell, Douglas.  1999. \TeXML{}: Typesetting
  \XML{} with \TeX. {\em TUGboat}. 20 (3):
  176–183. \tbsurl{tug.org/TUGboat/tb20-3/tb64love.pdf}.}

\bibitem{marlett:2012}{Marlett, Stephen A, (compiler). 2012. La Frase Nominal.  In Stephen A. Marlett (ed.) {\em Los Archivos Lingüísticos Me'phaa}. Instituto Lingüístico de Verano, A.C. [SIL International in Mexico]. \tbsurl{mexico.sil.org/publications/i-wpindex/work_papers_-_mephaa_grammar_files}.}

\bibitem{marlett:2019}{Marlett, Stephen A. 2019. {\em Phonology From
    the Ground Up: The Basics}. Dallas, Texas: \SIL{}
  International. \tbsurl{sil.org/resources/archives/79207}.}

\bibitem{nmeAndMarlett:2011}{Neri Méndez, Emilia and Stephen A. Marlett. 2011 (Nov). Presentación Analítica del Texto “Flor de Calabaza”. In Stephen A. Marlett (ed.) {\em Los Archivos Lingüísticos Me'phaa} (versión preliminar). Instituto Lingüístico de Verano, A.C. [SIL International in Mexico]. \tbsurl{mexico.sil.org/publications/i-wpindex/work_papers_-_mephaa_grammar_files}.}

\bibitem{nordhoffandmueller:2020}{Nordhoff, Sebastian, and Stefan Müller. 2020. {\em Language Science Press Guidelines}. Berlin, Germany: Language Science Press. \tbsurl{langsci.github.io/guidelines/latexguidelines/LangSci-guidelines.pdf}.}

\bibitem{paterson:2021}{Paterson III, Hugh J. 2021. {\em Language
    Archive Records: Interoperability of Referencing Practices and
    Metadata Models}. University of North Dakota
  M.A. thesis. \tbsurl{commons.und.edu/theses/3937}.}

\bibitem{pellard:2019}{Pellard, Thomas. 2019. Automatic formatting of interlinear glosses with LaTeX. {\em Cipanglossia} \tbsurl{cipanglo.hypotheses.org/1221}.}

\bibitem{peter:2004}{Peter, Steve. 2004. TEX and Linguistics. {\em TUGboat} 25 (1): 58–62. \tbsurl{tug.org/TUGboat/tb25-1/peter.pdf}.}

\bibitem{priemerufreitag:2019}{Machicao y Priemer, Antonio, and Constantin Freitag. 2019. {\em LaTeX-Einführung Für Linguisten}. Presentation at the MGK Workshop – SFB 1412, Berlin. doi:\tbsurl{linguistik.hu-berlin.de/de/staff/amyp/latex20sfb/07-l4l-math2-trees-handout.pdf}.}

\bibitem{rasmussen:2018}{Rasmussen, Kent. 2018. {\em A Comparative
    Tone Analysis of Several Bantu D30 Languages (DR
    Congo)}. University of Texas Arlington
  Ph.D. dissertation. \tbhurl{hdl.handle.net/10106/27483}.}

\bibitem{rastorgueva:2012}{Rastorgueva, V. S., A. A. Kerimova, A. K. Mamedzade, L. A. Pireiko, and D. I. Edel’man. 2012. {\em The Gilaki Language}. Edited by Ronald M. Lockwood. Acta Universitatis Upsaliensis; Studia Iranica Upsaliensia 19. Uppsala, Sweden: Acta Universitatis Upsaliensis. \tbsurl{urn.kb.se/resolve?urn=urn:nbn:se:uu:diva-182789}.}

\bibitem{rei:1996}{Rei, Fukui. 1996. \acro{TIPA}: A System for Processing Phonetic Symbols in LATEX. {\em  TUGboat} 17 (2): 102–14. \tbsurl{tug.org/TUGboat/tb17-2/tb51rei.pdf}.}

\bibitem{SalffnerGavid:2014}{Salffner, Sophie, and Tim Gaved. 2014. Working with \ELAN{} and \FLEx{} Together: An \ELAN{}-\FLEx{}-\ELAN{} Teaching Set. Electronic Manuscript. SOAS, London, England. \tbsurl{soas.ac.uk/elar/helpsheets/file122785.pdf}.}

\bibitem{schenneretal:2016}{Schenner, Mathias, and Sebastian Nordhoff. 2016. Extracting Interlinear Glossed Text from LATEX Documents. In {\em Proceedings of the Tenth International Conference on Language Resources and Evaluation (LREC 2016)}, edited by Nicoletta Calzolari, Khalid Choukri, Thierry Declerck, Sara Goggi, Marko Grobelnik, Bente Maegaard, Joseph Mariani, et al., 4044–48. Portorož, Slovenia: European Language Resources Association (ELRA). \tbsurl{aclweb.org/anthology/L16-1638.pdf}.}

\bibitem{smithsniderwiegand:2016}{Smith, Zac, Todd Snider, and Mia Wiegand. 2016. {\em LaTeX and Linguistics - How to Make Your Research Pretty}. Presentation at the Cornell Linguistics Circle, Cornell, New York. \tbsurl{conf.ling.cornell.edu/miawiegand/Latex_Slides.pdf}.}

\bibitem{so:2021}{So Miyagawa, and Vincent W.J. van Gerven Oei. 2021. Building Web Corpus of Old Nubian with Interlinear Glossing as Digital Cultural Heritage for Modern-Day Nubians. In {\em The  Proceedings of the 11th Conference of Japanese Association for Digital Humanities}, vol. 2021. 144–147. Tokyo: Historiographical Institute, The University of Tokyo. \tbsurl{hi.u-tokyo.ac.jp/JADH/2021/Proceedings_JADH2021_rev0905.pdf}.}

\bibitem{thiele:1995}{Thiele, Christina. 1995. TEX and Linguistics. {\em TUGboat} 16 (1): 42–44. \tbsurl{tug.org/TUGboat/tb16-1/tb46ling.pdf}.}

\bibitem{thiele:2007}{Thiele, Christina. 2007. {\em Christina Thiele Interview by Dave Walden for the \TeX{} Users Group}. Transcript. \tbsurl{tug.org/interviews/thiele.html}.}

\bibitem{unicode:1991}{Unicode Consortium, ed. 1991. {\em The Unicode Standard: Worldwide Character Encoding}. Version 1.0. Reading, Massachusetts: Addison-Wesley. \tbhurl{unicode.org/versions/Unicode1.0.0}.}

\bibitem{ward:2002}{Ward, Monica. 2002. Reusable XML Technologies and the Development of Language Learning Materials. {\em ReCALL} 14 (2): 285–94. \tbsurl{doi.org/10.1017/S0958344002000629}.}

\bibitem{wilson:2007}{Wilson, Peter. 2007. The Memoir Class. {\em
    TUGboat} 28 (2): 243–46. \tbsurl{tug.org/TUGboat/tb28-2/tb89wilson.pdf}.}

\bibitem{wilson:2021}{Wilson, Peter. 2021. {\em The Memoir Class for Configurable Typesetting: User Guide}. version 3.70. Normandy Park, WA: The Herries Press. \tbsurl{texdoc.org/serve/memoir/0}.}

\bibitem{Wood:2012}{Wood, Joyce Kathleen. 2012. {\em Valence-Increasing Strategies in Urim Syntax}. Graduate Institute
  of Applied Linguistics M.A. thesis. \tbsurl{diu.edu/documents/theses/Wood_Joyce-thesis.pdf}.}

%These are not yet used in the text

%\bibitem{conzettanddesmedt:2022}{Conzett, Philipp, and Koenraad De Smedt. 2022. {\em Guidance for Citing Linguistic Data}. In The Open Handbook of Linguistic Data Management, edited by Andrea L. Berez-Kroeker, Bradley McDonnell, Eve Koller, and Lauren B. Collister, 143–55. Open Handbooks In Linguistics. Cambridge, Massachusetts: The MIT Press. \tbsurl{doi.org/10.7551/mitpress/12200.003.0015}.}

%These are likely to be added for unicode discussion
% https://pure.mpg.de/rest/items/item_58925/component/file_58926/content unicode
%https://www.researchgate.net/profile/Hennie-Brugman/publication/238473992_Annotating_Multimedia_Multi-modal_resources_with_ELAN/links/53fd90320cf22f21c2f80afd/Annotating-Multimedia-Multi-modal-resources-with-ELAN.pdf
%PSTricks https://www.tug.org/TUGboat/tb31-1/tb97complete.pdf#38
%

\end{thebibliography}

\makesignature
\end{document}
